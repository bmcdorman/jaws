package com.github.jaws;

import com.github.jaws.http.HttpResponseHeader;
import java.io.ByteArrayInputStream;
import java.util.List;
import static org.junit.Assert.*;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

/**
 *
 * @author Braden McDorman
 */
@RunWith(JUnit4.class)
public class HttpResponseHeaderTest {
	@Test
	public void parseResponse() throws Exception {
		
		// A slightly minimized response from www.google.com generated by
		// curl -I www.google.com
		final String googleResponse = "HTTP/1.1 200 OK\n" +
			"Date: Sun, 23 Jun 2013 20:22:50 GMT\n" +
			"Expires: -1\n" +
			"Cache-Control: private, max-age=0\n" +
			"Content-Type: text/html; charset=ISO-8859-1\n" +
			"X-XSS-Protection: 1; mode=block\n" +
			"X-Frame-Options: SAMEORIGIN\n" +
			"Transfer-Encoding: chunked";
		
		ByteArrayInputStream input = new ByteArrayInputStream(googleResponse.getBytes());
		
		final HttpResponseHeader h = HttpResponseHeader.parseResponseHeader(input);
		assertNotNull("Response parse failed", h);
		assertEquals("Version mismatch", h.getVersion(), "HTTP/1.1");
		assertEquals("Status code mismatch", h.getStatusCode(), 200);
		assertEquals("Reason Phrase", h.getReasonPhrase(), "OK");
		
		for(String field : h.getFields()) {
			List<String> values = h.getField(field);
			assertNotNull("Field list is null", values);
			final String value = values.get(0);
			
			assertNotNull(field + " value is null", value);
			
			if(field.equals("Date")) {
				assertEquals("Value mismatch", value,
					"Sun");
			} else if(field.equals("Expires")) {
				assertEquals("Value mismatch", value,
					"-1");
			} else if(field.equals("Cache-Control")) {
				assertEquals("Value mismatch", value,
					"private");
			} else if(field.equals("Content-Type")) {
				assertEquals("Value mismatch", value,
					"text/html; charset=ISO-8859-1");
			} else if(field.equals("X-XSS-Protection")) {
				assertEquals("Value mismatch", value,
					"1; mode=block");
			} else if(field.equals("X-Frame-Options")) {
				assertEquals("Value mismatch", value,
					"SAMEORIGIN");
			} else if(field.equals("Transfer-Encoding")) {
				assertEquals("Value mismatch", value,
					"chunked");
			} else {
				fail("Unexpected field " + field);
			}
		}
	}
}
